{"version":3,"file":"page.js","mappings":"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","sources":["webpack://project2/./src/services.js","webpack://project2/webpack/bootstrap","webpack://project2/webpack/runtime/define property getters","webpack://project2/webpack/runtime/hasOwnProperty shorthand","webpack://project2/webpack/runtime/make namespace object","webpack://project2/./src/page.js"],"sourcesContent":["export function fetchLogin(username) {\n    return fetch('/api/session', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json', // set this header when sending JSON in the body of request\n        },\n        body: JSON.stringify({ username }),\n    })\n        // fetch() rejects on network error\n        // So we convert that to a formatted error object\n        // so our caller can handle all \"errors\" in a similar way\n        .catch(err => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (!response.ok) {  // response.ok checks the status code from the service\n                // This service returns JSON on errors,\n                // so we use that as the error object and reject\n                return response.json().then(err => Promise.reject(err));\n            }\n            return response.json(); // happy status code means resolve with data from service\n        });\n}\n\nexport function fetchStatus() {\n    return fetch('/api/session', {\n        method: 'GET',\n    })\n        .catch(err => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (!response.ok) {\n                return response.json().then(err => Promise.reject(err));\n            }\n            return response.json();\n        });\n}\n\nexport function fetchLogout() {\n    return fetch('/api/session', {\n        method: 'DELETE',\n    })\n        .catch(err => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (!response.ok) {\n                return response.json().then(err => Promise.reject(err));\n            }\n            return response.json();\n        })\n}\n\nexport function fetchLoggedInUsers() {\n    return fetch('/api/loggedinusers', {\n        method: 'GET',\n    })\n        .catch(err => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (!response.ok) {\n                return response.json().then(err => Promise.reject(err));\n            }\n            return response.json();\n        });\n}\n\nexport function fetchMessageList(currentTalkingTo) {\n    return fetch('/api/messagelist', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify({ currentTalkingTo }),\n    })\n        .catch(err => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (!response.ok) {\n                return response.json().then(err => Promise.reject(err));\n            }\n            return response.json();\n        })\n}\n\nexport function fetchSendingMessage(message, currentTalkingTo) {\n    return fetch('/api/message', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify({ message, currentTalkingTo }),\n    })\n        .catch(err => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (!response.ok) {\n                return response.json().then(err => Promise.reject(err));\n            }\n            return response.json();\n        })\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\n\nimport { fetchLogin, fetchStatus, fetchLogout, fetchLoggedInUsers, fetchMessageList, fetchSendingMessage } from \"./services\";\n\n(function () {\n    const state = {\n        wasLoggedIn: false,\n        username: '',\n        userList: [],\n        currentTalkingTo: '',\n        messageList: [],\n        timeoutId: '',\n        error: '',\n    }\n\n    const loginEl = document.querySelector('.login-module');\n    const statusEl = document.querySelector('.status-module');\n    const loggedInUsersEl = document.querySelector('.logged-in-users');\n    const messageEl = document.querySelector('.messages');\n    const outGoingEl = document.querySelector('.outgoing');\n    const errorEl = document.querySelector('.error-message');\n\n    // every time get to this page, first check user status\n    // if logged in, get logged-in-user list and current talking to user messages\n    pollStatus();\n    render();\n\n    // regular polling\n    function pollStatus() {\n        fetchStatus()\n        .then(result => {\n            state.username = result.username;\n            if (state.username) {\n                state.wasLoggedIn = true;\n                renderLoginPage();\n                renderStatusPage();\n                fetchLoggedInUsers()\n                .then(result => {\n                    state.userList = result.loggedInUsers;\n                    renderLoggedInUsers();\n                })\n                .then( () => {\n                    fetchMessageList(state.currentTalkingTo).then(result => {\n                        state.messageList = result.messageList;\n                        renderMessages();\n                    });\n                });\n            }\n        })\n        .then(() => {\n            if (state.wasLoggedIn) {\n                state.timeoutId = setTimeout(pollStatus, 5000);\n            }\n        })\n        .catch(err => {\n            state.error = err.error;\n            render(state.error);\n        });\n    }\n\n    // at login page, logging-in, render chat-module with \n    // updating logged-in-user list and current talking to user messages\n    loginEl.addEventListener('click', (event) => {\n        if (event.target.classList.contains('login-button')) {\n            const username = document.querySelector(`.login-username`).value;\n            fetchLogin(username).then(response => {\n                state.wasLoggedIn = true;\n                state.username = username;\n                pollStatus();\n                fetchLoggedInUsers()\n                .then(result => {\n                    state.userList = result.loggedInUsers;\n                    render();\n                })\n                .then( () => {\n                    fetchMessageList(state.currentTalkingTo).then(result => {\n                        state.messageList = result.messageList;\n                        render();\n                    })\n                });\n            }).catch(err => {\n                state.error = err.error;\n                render(state.error);\n            });\n        }\n    })\n\n    // on chat page, log out, clear state\n    statusEl.addEventListener('click', (event) => {\n        if (event.target.classList.contains('logout-button')) {\n            event.preventDefault();\n            fetchLogout().then(response => {\n                state.wasLoggedIn = false;\n                state.username = '';\n                state.userList = [];\n                state.currentTalkingTo = '';\n                state.messageList = [];\n                clearTimeout(state.timeoutId);\n                state.timeoutId = '',\n                render();\n            }).catch(err => {\n                state.error = err.error;\n                render(state.error);\n            });\n        }\n    })\n\n    // on chat page, change talking to user\n    loggedInUsersEl.addEventListener('click', (event) => {\n        if (event.target.classList.contains('loggedInUser')) {\n            const currentTalkingTo = event.target.dataset.username;\n            fetchMessageList(currentTalkingTo).then(result => {\n                state.currentTalkingTo = currentTalkingTo;\n                state.messageList = result.messageList;\n                render();\n            }).catch(err => {\n                state.error = err.error;\n                render(state.error);\n            });\n        }\n    })\n\n    // on chat page, send message, then re-render message list\n    outGoingEl.addEventListener('click', (event) => {\n        if (event.target.classList.contains('send-button')) {\n            event.preventDefault();\n            const messageContent = document.querySelector('.content-to-send').value;\n            const message = {\n                sendFrom: state.username,\n                content: messageContent,\n            };\n            const currentTalkingTo = state.currentTalkingTo;\n            fetchSendingMessage(message, currentTalkingTo).then(result => {\n                fetchMessageList(currentTalkingTo).then(result => {\n                    state.messageList = result.messageList;\n                    render();\n                }).catch(err => {\n                    state.error = err.error;\n                    render(state.error);\n                });\n            }).catch(err => {\n                state.error = err.error;\n                render(state.error);\n            })\n        }\n    })\n\n    function renderLoginPage() {\n        loginEl.innerHTML = state.wasLoggedIn ? '' : `\n            <input class=\"login-username\" name=\"username\" placeholder=\"Username\"/>\n            <button class=\"login-button\" >login</button>\n        `;\n    }\n\n    function renderStatusPage() {\n        statusEl.innerHTML = state.wasLoggedIn ? `\n            <div>\n                <span class=\"welcome\">Welcome ${state.username}!</span>\n                <button class=\"logout-button\">Log out</button>\n            </div>\n        ` : ``;\n    }\n\n    function renderLoggedInUsers() {\n        const userList = state.userList;\n        const html = userList.map((username) => {\n            if (username == state.username) {\n                return ``;\n            }\n            return `\n                <li>\n                    <span class=\"loggedInUser\" data-username=\"${username}\">${username}</span>\n                </li>\n            `;\n        }).join('');\n        loggedInUsersEl.innerHTML = state.wasLoggedIn ? html : ``;\n    }\n\n    function renderMessages() {\n        const messages = state.messageList;\n        const html = messages.map((message) => {\n            return `\n                <li>\n                    <div class=\"message\">\n                        <div class=\"sender-info\">\n                            <span class=\"username\">${message.sendFrom}</span>\n                        </div>\n                        <p class=\"message-text\">${message.content}</p>\n                    </div>\n                </li>\n            `;\n        }).join('');\n        messageEl.innerHTML = (state.wasLoggedIn && !state.currentTalkingTo) ? `You have to select a user to start chatting.` : html;\n    }\n\n    function renderOutgoing() {\n        outGoingEl.innerHTML = (state.wasLoggedIn && state.currentTalkingTo) ? `\n            <form class=\"send-message\">\n                <input class=\"content-to-send\" placeholder=\"Enter message to send\" />\n                <button class=\"send-button\" type=\"submit\">Send</button>\n            </form>\n        ` : ``;\n    }\n\n    function renderErrorPage(error) {\n        const errorMsg = {\n            'auth-insufficient': \"Don't use dog as username\",\n            'required-username': \"Please enter a valid username. A valid username should only contains digits and letters.\",\n            'auth-missing': \"Please login.\",\n            'require-message': 'Please enter a message.',\n            'invalid-word': \"Please enter a valid word. A valid word should only contains letters.\"\n        }\n        errorEl.innerHTML = error ? `<p>Error: ${errorMsg[error]}</p>` : '';\n    }\n\n    function render(error) {\n        renderLoginPage();\n        renderStatusPage();\n        renderLoggedInUsers();\n        renderMessages();\n        renderOutgoing();\n        renderErrorPage(error);\n    }\n})();"],"names":["fetchLogin","username","fetch","method","headers","body","JSON","stringify","err","Promise","reject","error","then","response","ok","json","fetchStatus","fetchLogout","fetchLoggedInUsers","fetchMessageList","currentTalkingTo","fetchSendingMessage","message","state","wasLoggedIn","userList","messageList","timeoutId","loginEl","document","querySelector","statusEl","loggedInUsersEl","messageEl","outGoingEl","errorEl","pollStatus","render","result","renderLoginPage","renderStatusPage","loggedInUsers","renderLoggedInUsers","renderMessages","setTimeout","addEventListener","event","target","classList","contains","value","preventDefault","clearTimeout","dataset","messageContent","sendFrom","content","innerHTML","html","map","join","messages","renderOutgoing","renderErrorPage","errorMsg"],"sourceRoot":""}